version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: backend
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=${BACKEND_PORT}"

  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    command: ["--port", "${MONGODB_PORT}"]
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--port", "${MONGODB_PORT}", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: ["redis-server", "--port", "${REDIS_PORT}"]
    volumes:
      - redis_data:/data
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:${TRAEFIK_HTTP_PORT}"
    ports:
      - "${TRAEFIK_HTTP_PORT}:${TRAEFIK_HTTP_PORT}"
      - "${TRAEFIK_DASHBOARD_PORT}:${TRAEFIK_DASHBOARD_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:${TRAEFIK_HTTP_PORT}/ping"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  mongo_data:
  redis_data: 